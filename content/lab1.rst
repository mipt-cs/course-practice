Исполнитель "Робот"
###################

:date: 2019-09-02 09:00
:summary: Техника безопасности и эргономика. Управление "Роботом" простыми синтаксическими командами на Python.
:status: published
:lecture_link: https://youtu.be/fgf57Sa5A-A


.. default-role:: code

Техника безопасности при работе за ПК
=====================================

В течение первого часа вы посмотрите фильм по технике безопасности и прочитаете заметки ниже.

Безопасность жизни
------------------

1. Опасность поражения электрическим током
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: {static}/images/lab1/smoking_computer.jpg
   :width: 600

Никогда не вскрывайте компьютер, подключенный к электрическому питанию!
Компьютер в первую очередь является электрическим, а уже затем электронным устройством, поэтому *опасайтесь поражения электрическим током*.

2. Опасность пожара
~~~~~~~~~~~~~~~~~~~

Пожар — это страшная, но реально возможная опасность. Возгорание электрической проводки — `частая причина пожара`__.

.. __: https://iz.ru/783222/2018-08-30/eksperty-ustanovili-pochemu-v-zimnei-vishne-avtomaticheski-ne-otkliuchilos-elektrichestvo

Электросеть, в том числе удлинитель и конечный кабель, используемый для подключения ПК, должны быть электрически исправны и рассчитаны на соответствующую нагрузку. Большим потреблением энергии обладают: системный блок, некоторые типы мониторов и лазерные принтеры в момент прогрева печи. Просуммируйте пиковые мощности потребления Ваших устройств и сравните с максимальной допустимой для Вашей электросети и Вашего удлинителя.

Безопасность "железа"
---------------------

.. image:: {static}/images/lab1/broken_hdd.jpg
   :width: 667

Полюбите пусть не читать, но хотя бы листать документацию — это полезно по жизни.
Многие *условия работы оборудования могут оказаться не очевидными*. Например, принтеры не допускают запыления или повышенной влажности, винчестеры HDD нельзя ронять, а ОЗУ катастрофически боится электростатики.

Безопасность здоровья
---------------------

.. image:: https://upload.wikimedia.org/wikipedia/commons/3/35/Computer_Workstation_Variables.jpg
   :width: 375

*Автор картинки: Berkeley Lab - Ergonomics, Integrated Safety Management, Berkeley Lab., Общественное достояние*

Длительная работа за компьютером может испортить здоровье! А может и не испортить.
Спасением здоровья трудящихся озабочена наука `эргономика`__.

.. __: https://ru.wikipedia.org/wiki/%D0%AD%D1%80%D0%B3%D0%BE%D0%BD%D0%BE%D0%BC%D0%B8%D0%BA%D0%B0


Что подвергается наибольшей опасности:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. позвоночник
#. глаза
#. запястный канал
#. лёгкие
#. вены на ногах

Что поможет сохранить здоровье:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. правильная высота стола и стула
#. удобные клавиатура и манипулятор "мышь"
#. привычка держать осанку (не сутулиться)
#. привычка отдыхать (*регулярность* коротких перерывов)
#. отказ от работы за ЭЛТ монитором
#. привычка следить за освещённостью рабочего места
#. привычка управлять яркостью монитора в зависимости от освещённости
#. десятипальцевая слепая печать

Купить эргономичный стул, стол и клавиатуру легко и быстро (если есть такая финансовая возможность).

Если у вас есть хороший ноутбук, но у него не самая удачная клавиатура, купите дополнительно *внешнюю клавиатуру*: храните и используйте её в том месте, где вы чаще всего работаете.

Привычки будут полезны всегда, хотя выработать их может быть сложно. Обязательно постарайтесь научиться `десятипальцевой слепой печати`__ — это сохранит ваше зрение, улучшит осанку, поможет долго работать за компьютером, не ощущая напряжения в руках, а *продуктивность работы увеличится*.

.. __: https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D0%B5%D0%BF%D0%BE%D0%B9_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4_%D0%BF%D0%B5%D1%87%D0%B0%D1%82%D0%B8


Информационная безопасность
---------------------------

Кроме опасностей, связанных с жизнью и здоровьем, при работе с комьютером возникает множество *информационных опасностей*.

.. image:: https://survival.kaspersky.com/img/bg_1200.png
   :width: 60%

Поскольку эта тема очень важна и интересна, вы изучите её самостоятельно по методичке от лаборатории Касперского `https://survival.kaspersky.ru`__ .

.. __: https://survival.kaspersky.ru/book/Survive_book.pdf

Исполнитель "Робот"
===================

В этой работе вам предстоит управлять учебным графическим исполнителем "Робот".

Робот живёт на прямоугольном клеточном поле, по периметру огороженном стенами. Между клетками тоже
могут встречаться стены.

Возможные состояния клетки:

* пустая;
* помечена для закрашивания;
* закрашена.
* клетка, отмеченная чёрной точкой, куда робот должен прийти после выполнения алгоритма.


Команды робота
--------------

+------------------------+------------------------------------------------------------------------------------+
| Команда                | Описание                                                                           |
+========================+====================================================================================+
| move_left(n=1)         | Пройти `n` клеток влево (по умолчанию n = 1)                                       |
+------------------------+------------------------------------------------------------------------------------+
| move_right(n=1)        | Пройти `n` клеток вправо (по умолчанию n = 1)                                      |
+------------------------+------------------------------------------------------------------------------------+
| move_up(n=1)           | Пройти `n` клеток вверх (по умолчанию n = 1)                                       |
+------------------------+------------------------------------------------------------------------------------+
| move_down(n=1)         | Пройти `n` клеток вниз (по умолчанию n = 1)                                        |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_above()        | если *сверху* стена, возвращает True, иначе — False                                |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_beneath()      | если *снизу* стена, возвращает True, иначе — False                                 |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_on_the_left()  | если *слева* стена, возвращает True, иначе — False                                 |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_on_the_right() | если *справа* стена, возвращает True, иначе — False                                |
+------------------------+------------------------------------------------------------------------------------+
| fill_cell()            | Закрасить текущую клетку                                                           |
+------------------------+------------------------------------------------------------------------------------+
| cell_is_filled()       | Возвращает True, если текущая клетка закрашена                                     |
+------------------------+------------------------------------------------------------------------------------+
| mov(r, v)              | Поместить значение `v` в регистр `r`. Функцию можно использовать после того, как   |
|                        | было создано поле с роботом. Регистр - это любая строка, например, `mov('ax', 10)`.|
+------------------------+------------------------------------------------------------------------------------+

Как запустить Робота
--------------------

Скачайте и разархивируйте `файлы Робота`__ в любое место в своей домашней папке.

.. __: {static}/extra/lab1/robot-tasks-master.zip

Увидеть условие первой задачи можно, запустив в этой папке из консоли

.. code-block:: text

	python3 task_1.py

Решение пишется прямо в файл `task_1.py`, который можно открыть любым текстовым редактором (например, gedit или PyCharm).
	
Для быстрой самопроверки ваших решений в этой папке есть файл `all_tasks.py`, который запустит все программы подряд и проверит их корректность.


Как решать задачи для Робота
----------------------------

Для решения каждой задачи, если больше ничего не сказано, требуется выполнить условия:

* закончить выполнение в клетке с чёрной точкой;
* закрасить все бирюзовые клетки;
* ни разу не врезаться в стену.

В итоге Робот может оказаться в одном из четырёх состояний.

Состояние №1: задача решена
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3

   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(9):
           move_right()
           move_down()
   
   
   if __name__ == '__main__':
       run_tasks()


.. image:: {static}/images/lab1/demo1.gif
   :width: 251px


Состояние №2: задача не решена, завершение штатное
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(4):
           move_right()
           move_down()
   
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {static}/images/lab1/demo2.gif
   :width: 251px


Состояние №3: ошибка времени выполнения
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(9):
           move_right()
           move_down()
   
           if i == 6:
               z = 1 / 0
   
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {static}/images/lab1/demo3.gif
   :width: 251px


Состояние №4: робот врезался в стену
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(10):
           move_right()
           move_down()
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {static}/images/lab1/demo4.gif
   :width: 251px

Просто последовательности команд
--------------------------------

Задача №1: task_1_1
~~~~~~~~~~~~~~~~~~~

Дойти до конечной точки.

.. image:: {static}/images/lab1/task_1_1.png
   :width: 251px

Задача №2: task_1_2
~~~~~~~~~~~~~~~~~~~

Дойти до конечной точки, закрасить одну клетку.

.. image:: {static}/images/lab1/task_1_2.png
   :width: 251px


Условное исполнение
-------------------

Задача №3: task_3_1
~~~~~~~~~~~~~~~~~~~

Дойти до стены. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_3_1.png
   :width: 251px

Задача №4: task_3_3
~~~~~~~~~~~~~~~~~~~

С трёх сторон стены. Выйти в свободную сторону. Положение выхода не известно.

.. image:: {static}/images/lab1/task_3_3.png
   :width: 251px

Циклы с условием
----------------

Задача №5: task_5_2
~~~~~~~~~~~~~~~~~~~

Дойти до конца стены. Расстояние не известно.

.. image:: {static}/images/lab1/task_5_2.png
   :width: 251px

Задача №6: task_5_3
~~~~~~~~~~~~~~~~~~~

Дойти до конца стены. Расстояние не известно.

.. image:: {static}/images/lab1/task_5_3.png
   :width: 502px

Задача №7: task_5_4
~~~~~~~~~~~~~~~~~~~

Обойти стену. Размеры стены и расстояние до неё неизвестны. Стена одна.

.. image:: {static}/images/lab1/task_5_4.png
   :width: 400px

Задача №8: task_5_7
~~~~~~~~~~~~~~~~~~~

Выйти из коридора. Есть проёмы сверху или снизу.

.. image:: {static}/images/lab1/task_5_7.png
   :width: 502px


Условные действия на каждой итерации цикла
------------------------------------------

Задача №9: task_8_2
~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_2.png
   :width: 502px

Задача №10: task_8_3
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_3.png
   :width: 502px

Задача №11: task_8_4
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_4.png
   :width: 502px

Задача №12: task_8_6
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_6.png
   :width: 502px

Задача №13: task_8_10
~~~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_10.png
   :width: 502px

Задача №14: task_8_11
~~~~~~~~~~~~~~~~~~~~~

Закрасить клетки. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_8_11.png
   :width: 502px


Циклы, вложенные в условия
--------------------------

Задача №15: task_8_21
~~~~~~~~~~~~~~~~~~~~~

Перейти в противоположный угол. В начальный момент робот находится в углу, но не известно, в каком.

.. image:: {static}/images/lab1/task_8_21.png
   :width: 251px

Задача №16: task_8_22
~~~~~~~~~~~~~~~~~~~~~

Дойти до конца тупика. Тупик имеет форму буквы Г (влево или вправо). Размеры тупика не известны.

.. image:: {static}/images/lab1/task_8_22.png
   :width: 300px

Задача №17: task_8_27
~~~~~~~~~~~~~~~~~~~~~

Перейти на вторую закрашенную клетку. Клетка может быть как справа, так и слева.

.. image:: {static}/images/lab1/task_8_27.png
   :width: 300px

Задача №18: task_8_28
~~~~~~~~~~~~~~~~~~~~~

Выйти из ловушки. Где находится выход, не известно.

.. image:: {static}/images/lab1/task_8_28.png
   :width: 300px

Задача №19: task_8_29
~~~~~~~~~~~~~~~~~~~~~

Выйти из ловушки. Выход может находиться как справа, так и слева. Выхода может не быть, в этом случае остановиться в правом тупике.

.. image:: {static}/images/lab1/task_8_29.png
   :width: 251px


Вложенные циклы
---------------

Задача №20: task_4_3
~~~~~~~~~~~~~~~~~~~~

Закрасить отмеченные клетки.

.. image:: {static}/images/lab1/task_4_3.png
   :width: 502px

Задача №21: task_4_11
~~~~~~~~~~~~~~~~~~~~~

Закрасить отмеченные клетки.

.. image:: {static}/images/lab1/task_4_11.png
   :width: 400px

Задача №22: task_5_10
~~~~~~~~~~~~~~~~~~~~~

Закрасить всё поле. Размеры поля неизвестны.

.. image:: {static}/images/lab1/task_5_10.png
   :width: 200px


Задача №23: task_6_6
~~~~~~~~~~~~~~~~~~~~

Закрасить коридоры и вернуться. Количество и длины коридоров не известны.

.. image:: {static}/images/lab1/task_6_6.png
   :width: 502px

Создание и использование подпрограмм
------------------------------------

Задача №24: task_2_1
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {static}/images/lab1/task_2_1.png
   :width: 251px

Задача №25: task_2_2
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {static}/images/lab1/task_2_2.png
   :width: 502px

Задача №26: task_2_4
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {static}/images/lab1/task_2_4.png
   :width: 502px

Использование переменных-флагов и переменных-счётчиков
------------------------------------------------------

Обратите внимание на то, что в этих задачах ситуативное поведение Робота не может решить задачу.
В задачах требуется запомнить состояние или посчитать количество определённых клеток.
Используйте для этого *переменные*.

Задача №27: task_7_5
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки с увеличивающимся интервалом. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_7_5.png
   :width: 502px

Задача №28: task_7_6
~~~~~~~~~~~~~~~~~~~~

Остановится на пятой закрашенной клетке. Количество закрашенных клеток не известно, но точно больше пяти.

.. image:: {static}/images/lab1/task_7_6.png
   :width: 502px

Задача №29: task_7_7
~~~~~~~~~~~~~~~~~~~~

Остановится на третьей подряд закрашенной клетке. Если нет трёх подряд закрашенных клеток, то остановиться у правой стены. Расстояние до стены не известно.

.. image:: {static}/images/lab1/task_7_7.png
   :width: 502px

Задача №30: task_9_3
~~~~~~~~~~~~~~~~~~~~

Закрасить поле «треугольниками». Размер поля не известен, но поле всегда квадратное с нечётным количество клеток по каждой стороне.

.. image:: {static}/images/lab1/task_9_3.png
   :width: 250px

Задача №31: task_8_30
~~~~~~~~~~~~~~~~~~~~~

Добраться до нижнего уровня. Количество уровней не известно. Расстояние между стенами не известно. В каждой стене точно есть ровно один проём.

.. image:: {static}/images/lab1/task_8_30.png
   :width: 502px

Задача №32: task_8_18
~~~~~~~~~~~~~~~~~~~~~

Закрасить отмеченные клетки. В регистр `ax` записать количество клеток, которые были закрашены ещё до того, как робот начал двигаться. Количество и размеры коридоров не известны.

.. image:: {static}/images/lab1/task_8_18.png
   :width: 502px


